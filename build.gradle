plugins {
    id 'java'
    id 'io.quarkus'
	id "fr.brouillard.oss.gradle.jgitver" version "0.10.0-rc03"
}

group 'com.giantelectronicbrain'
//version '0.0.1'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-google-cloud-functions-http'
    implementation "io.quarkiverse.googlecloudservices:quarkus-google-cloud-firestore:${googleCloudServicesVersion}"
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

test {
	environment "GOOGLE_APPLICATION_CREDENTIALS", "homl_firebase_credentials.json"
}

compileTestJava {
    options.encoding = 'UTF-8'
}

task disableGCPKey(type: Exec) {
//	commandLine './scripts/disableGCPKey.sh', "${project.getProperty('keyId')}"
}
	
task createGCPKey(type: Exec) {
//	commandLine "./scripts/createGCPKey.sh", "${project.getProperty('keyFile')}"
}

task deployFirebaseRules(type: Exec) {
	commandLine './scripts/deployFirebaseRules.sh'
}

task generateHoMLRules(type: Exec) {
	commandLine './scripts/generateHoMLRules.sh', project.version
}

task deployHoMLRules(type: Exec) {
	dependsOn 'generateHoMLRules'
	commandLine './scripts/deployHoMLRules.sh'
}

task generateGEBSite(type: Exec) {
//	dependsOn 'generateHoMLRules'
	commandLine './scripts/generateGEBSite.sh', project.version
}

