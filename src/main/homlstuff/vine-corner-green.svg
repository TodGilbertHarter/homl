<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   id="svg2"
   sodipodi:docname="vine-corner-green.svg"
   viewBox="0 0 542.22 510.43"
   sodipodi:version="0.32"
   version="1.0"
   inkscape:output_extension="org.inkscape.output.svg.inkscape"
   y="0"
   x="0"
   inkscape:version="1.1 (c68e22c387, 2021-05-23)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:dc="http://purl.org/dc/elements/1.1/">
  <defs
     id="defs110">
    <linearGradient
       id="linearGradient4395"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#006900;stop-opacity:1;"
         offset="0"
         id="stop4393" />
    </linearGradient>
    <marker
       style="overflow:visible"
       id="Arrow1Lstart"
       refX="0.0"
       refY="0.0"
       orient="auto"
       inkscape:stockid="Arrow1Lstart"
       inkscape:isstock="true">
      <path
         transform="scale(0.8) translate(12.5,0)"
         style="fill-rule:evenodd;fill:context-stroke;stroke:context-stroke;stroke-width:1.0pt"
         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
         id="path1455" />
    </marker>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient4399"
       gradientUnits="userSpaceOnUse"
       x="23.323187"
       y="25.717129">
      <meshrow
         id="meshrow4401">
        <meshpatch
           id="meshpatch4403">
          <stop
             path="c 181.953,0  363.906,0  545.859,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop4405" />
          <stop
             path="c 0,170.491  0,340.982  0,511.473"
             style="stop-color:#008c00;stop-opacity:1"
             id="stop4407" />
          <stop
             path="c -181.953,0  -363.906,0  -545.859,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop4409" />
          <stop
             path="c 0,-170.491  0,-340.982  0,-511.473"
             style="stop-color:#008c00;stop-opacity:1"
             id="stop4411" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     id="base"
     bordercolor="#666666"
     inkscape:pageshadow="2"
     guidetolerance="10.0"
     pagecolor="#ffffff"
     gridtolerance="10.0"
     objecttolerance="10.0"
     borderopacity="1.0"
     inkscape:window-height="991"
     showgrid="false"
     inkscape:pageopacity="0.0"
     inkscape:window-width="1920"
     inkscape:pagecheckerboard="0"
     inkscape:zoom="1.5202868"
     inkscape:cx="218.70873"
     inkscape:cy="255.215"
     inkscape:window-x="1920"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer2" />
  <g
     id="layer2"
     transform="translate(-24.461 -24.264)"
     style="stroke:#008c00;stroke-opacity:1;fill:#008c00;fill-opacity:1">
    <path
       id="path7339"
       style="fill-rule:evenodd;fill:#008c00;stroke:url(#meshgradient4399);stroke-opacity:1;fill-opacity:1;stroke-width:5;stroke-miterlimit:4;stroke-dasharray:none;stroke-linecap:round"
       d="m65.844 57.875l9.906-2.469c14.625-20.974 56.67-31.856 89.56 5.938l6.47-3.688c-27.79-34.172-78.876-40.622-105.94 0.219zm-6.945 38.872l-1.166-7.588c-47.379-20.217-14.876-68.462 14.798-49.065l5.634-4.764c-40.195-28.808-84.289 37.454-19.266 61.417zm123.48-28.216l-4.91 3.281c75.96 66.968 116.15-66.193 192.56-12.093-75.6-62.424-116.53 68.431-187.65 8.812zm-53.66 16.063l1.02 6.491c38.69-5.578 83.9-71.581 137.53-29.105l4.55-3.975c-56.78-49-109.15 20.994-143.1 26.589zm-38.626-38.625l-4.844 4.343c9.996 10.388 10.213 21.031 11.651 37.921l7.189-1.327c-0.88-15.138-2.5-29.798-13.996-40.937zm12.146 13.446l1.6 6.27c13.61 4.497 18.04 16.404 14.5 38.405l6.29-0.35c3.71-23.096 0.57-39.327-22.39-44.325zm-39.8 17.261c-3.334 12.646-1.366 41.174 30.091 41.324l1.157-6.5c-25.589-1.02-27.094-23.307-22.094-38.906l-9.154 4.082zm-26.409 10.574c-36.963 69.94 103.09 89.26 29.442 195.59l2.246 6.28c82.641-109.47-57.004-136.94-25.563-196.87l-6.125-5zm78.369 0.472c-11.96 4.37-27.354 5.606-40.018 5.236l1.195 5.67c9.536 1.275 31.203-1.605 39.453-4.628l-0.63-6.278zm-16.838 13.868c-0.182 20.99 1.145 41.58-24.687 63.6l3.844 5.34c26.051-20.62 27.501-39.58 27.311-70l-6.468 1.06zm9.468 8.75l0.43 6.9c43.57-12.03 45.94 12.05 38.35 20.26s-24.99 1.82-22.62-19.09l-6.07 0.37c-3.85 25.16 20.61 37.6 34.22 24.12 13.55-13.4 3.48-46.655-44.31-32.56zm-44.936 63.78c-55.534 54.36 15.593 130.92 15.109 174-0.481 42.82-29.028 59.97-29.855 97.02-0.829 37.12 23.825 66.1 22.791 77.72s-16.029 12.98-15.763-2.41c-3.344 19.49 18.623 18.17 18.22 0.94-0.402-17.23-21.508-38.53-20.858-75.16 0.662-37.3 28.89-48.46 30.465-98.11 1.576-49.65-68.151-116.04-15.234-169.68l-4.875-4.32zm26.283-114.84c-17.544 0.049-33.886 7.573-42.579 17.365l5.921 4.758c7.2-7.039 19.513-16.139 39-15.468l-2.342-6.655zm462.48 15.416c-16.35-0.918-40.68-21.985-97.03-21.53-56.36 0.455-122.68 52.931-168.95 15.331l-3.66 4.406c49.64 41.694 117.54-14.457 172.61-14.831 55.06-0.374 76.36 18.049 96.47 19.53 20.1 1.481 24.17-22.191-1.8-19.585 22.45 1.376 18.71 17.597 2.36 16.679zm-494.91 218.82s-13.468 22.53-14.706 35.33c-1.239 12.82-2.017 24.88 8.628 35.8-6.336-11.47-6.71-15.96-5.541-31.52 1.168-15.56 14.668-33.5 14.668-33.5l-3.049-6.11z" />
  </g>
  <g
     id="layer3"
     transform="translate(-24.461 -24.264)"
     style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
    <g
       id="g15781"
       style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
      <path
         id="path15756"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m218.46 85.311c6.85-1.43 10.77-4.029 11.24-6.386-0.49-3.115-7.43-1.014-6.21-9.61 0.88-6.213 4.52-1.7 8.1 0.058 0.36-2.443-14.52-8.872-7.31-13.039 13.73-3.371 13.04 4.434 14.44 11.532 0.19-2.332 1.04-3.623 0.25-6.047 3.53 2.186 5.13 2.245 5.97 6.757 1.55 8.217-13.78 17.92-26.48 16.735z" />
      <path
         id="path15758"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m228.31 82.485c5.55-1.826 15.08-13.869 0.24-23.878 17.76 9.172 5.81 22.938-0.24 23.878z" />
    </g>
    <g
       id="g15750"
       transform="matrix(1.0582 0 0 1.0582 -15.743 1.287)"
       style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
      <path
         id="path15748"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m202.31 42.39c-1.77 4.785-6.35 7.931-10.91 9.194 5.14-3.718 9.44-7.233 6.49-11.278-2.08-2.942-9.46 6.169-12.74 1.961-3.22-4.132-0.36-4.17 2.69-6.987-2.61-1.169-13.15 11.266-15.69 1.716-2.46-9.25 8.35-9.773 16.67-8.704-2.53-0.971-4.85-1.072-7.84-0.98-1-4.331 3.55-6.78 10.05-5.027 9.39 2.533 13.06 15.281 11.28 20.105z" />
      <path
         id="path15746"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m196.61 48.193c10.34-11.27-2-21.591-21.14-13.496 20.43-11.833 33.8 3.813 21.14 13.496z" />
    </g>
    <g
       id="g15770"
       transform="matrix(-.79794 -.77032 .73610 -.83503 171.01 409.98)"
       style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
      <path
         id="path15772"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m237.23 92.042c-12.27-0.558-10.96-8.785-7.12-13.09-0.49-3.115-9.05-1.687-7.84-10.284 0.88-6.213 4.53-1.699 8.11 0.059 0.36-2.443-12.85-9.413-5.64-13.58 8.48-2.54 12.92 5.211 13.58 11.324 0.19-2.332 0.08-3.401 1.67-4.687 5.02 1.985 2.35 8.869-1 11.687-4.5 3.793-17.99 14.107-1.76 18.571z" />
      <path
         id="path15776"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m234.3 75.954c4.14-6.692-0.37-14.995-5.75-17.347 7.61 2.329 10.43 11.573 5.75 17.347z" />
    </g>
    <g
       id="g15787"
       transform="matrix(1.114 -.55828 -.60199 -1.0563 -147.45 648.8)"
       style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
      <path
         id="path15789"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m238.43 98.729c-12.71-5.951-11.64-16.263-7.8-20.569 0.49-3.045-11.46-7.239-5.04-12.901 1.1 2.502 1.61 3.786 2.78 3.127 2.43-1.363-6.58-5.376-5.05-10.055 2.11-6.455 15.07-1.898 15.62 7.666 0.66-1.994 0.22-2.738-0.41-4.477 5.29 3.69 4.5 10.932 0.43 12.56-6.23 2.491-17.16 12.129-0.53 24.649z" />
      <path
         id="path15791"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m232.37 77.085c2.2-5.379 5.1-11.874-5.52-18.722 11.26 4.989 9.44 11.807 5.52 18.722z" />
    </g>
    <g
       id="g15793"
       transform="matrix(-.73991 -.62512 -.65489 .87070 526.36 146.78)"
       style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
      <path
         id="path15795"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m198.03 32.923c3.36 0.532 4.84 0.852 8.88 2.516-4.86-0.988-10.52-3.549-10.47 1.268 0.03 2.828-6.33 10.415-11.29 5.56-3.4-3.671 0.16-4.934 1.86-6.31-2.61-1.169-10.02 9.655-14.86 1.039-5.3-9.441 8.64-10.567 14.94-8.887-2.54-0.971-7.31-0.378-6.25-5.352 2.32-1.717 6.38-1.363 11.03 1.583 6.3 3.999 5.12 5.764 6.16 8.583z" />
      <path
         id="path15797"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m196.09 33.221c-2.89-0.857-10.72-3.546-21.85 1.638 10.39-6.346 17.41-3.196 21.85-1.638z" />
    </g>
    <g
       id="g15799"
       transform="matrix(-.14605 -.78773 -1.1807 .17207 534.75 209.92)"
       style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
      <path
         id="path15801"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m190.1 32.406c2.62 0.901 13.52-1.061 13.96 13.426-3.25-11.854-7.72-10.259-13.92-11.143 0.72 2.932-4.47 8.954-11.69 8.21-3.14-3.006-0.41-4.864 0.97-6.85-2.61-1.168-8.67 8.708-14.87 1.04-7.13-8.841 8.64-10.568 14.94-8.887-2.53-0.972-7.31-0.378-6.25-5.352 2.32-1.717 6.39-1.363 11.03 1.583 6.31 3.999 4.8 5.154 5.83 7.973z" />
      <path
         id="path15803"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m187.97 32.728c-5.79-0.224-11.58-1.519-20.62 1.854 9.71-4.636 13.58-2.649 20.62-1.854z" />
    </g>
    <g
       id="g15805"
       transform="translate(-163.37 156)"
       style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
      <path
         id="path15807"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m211.09 52.914c-0.74 17.969 2.94 27.754 14.93 27.085 4.11-3.422-6.72-3.606-3.92-11.145 1.8-4.838 5.45-2.16 9.49 0.519 0.82-2.136-14.06-6.415-6.7-13.192 10.35-5.061 13.97 4.433 15.36 11.532 0.81-1.411 1.36-3.009 0.56-5.433 3.23 0.804 4.7 2.633 4.44 6.603-0.52 8.096-8.36 14.797-18.38 14.731-11.23-0.074-21.15-8.923-15.78-30.7z" />
      <path
         id="path15809"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m227.23 80.949c8.83-0.646 14.12-16.912 1.32-22.342 15.35 4.491 7.77 23.166-1.32 22.342z" />
    </g>
    <g
       id="g15811"
       transform="matrix(-.18599 .98255 -.98255 -.18599 170.44 150.35)"
       style="stroke:#00d600;stroke-opacity:1;fill:#005000;fill-opacity:1">
      <path
         id="path15813"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m224.9 85.889c2.9-2.358 4.1-3.312 5.72-5.339-3.28-0.557-8.54-7.551-5.48-11.548 3.68-4.807 4.23 2.105 6.74 0.316 0.38-2.446-14.3-4.383-7.9-12.147 8.35-6.571 15.84 3.28 15.83 9.707 0.84-1.517 0.79-2.637 0.1-4.456 5.38 1.368 5.52 4.575 6.18 8.906 0.73 4.811-3.4 9.746-8.19 9.898-1.87 0.059-3.07 0.119-6.18-0.464-1.56 0.533-3.4 3.241-6.82 5.127z" />
      <path
         id="path15815"
         style="fill-rule:evenodd;fill:#005000;stroke:#00d600;stroke-opacity:1;fill-opacity:1"
         d="m233.35 79.186c1.9-5.377 4.29-14.1-5.72-20.092 11.32 5.565 8.53 14.92 5.72 20.092z" />
    </g>
  </g>
  <metadata
     id="metadata107">
    <rdf:RDF>
      <cc:Work>
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <cc:license
           rdf:resource="http://creativecommons.org/licenses/publicdomain/" />
        <dc:publisher>
          <cc:Agent
             rdf:about="http://openclipart.org/">
            <dc:title>Openclipart</dc:title>
          </cc:Agent>
        </dc:publisher>
        <dc:date>2008-02-05T00:35:03</dc:date>
        <dc:description />
        <dc:source>https://openclipart.org/detail/12699/celtic-vine-corner-by-anonymous-12699</dc:source>
        <dc:creator>
          <cc:Agent>
            <dc:title>Anonymous</dc:title>
          </cc:Agent>
        </dc:creator>
        <dc:subject>
          <rdf:Bag>
            <rdf:li>border</rdf:li>
            <rdf:li>celtic</rdf:li>
            <rdf:li>corner</rdf:li>
            <rdf:li>decoration</rdf:li>
            <rdf:li>decorative</rdf:li>
            <rdf:li>flourish</rdf:li>
            <rdf:li>ornamental</rdf:li>
          </rdf:Bag>
        </dc:subject>
      </cc:Work>
      <cc:License
         rdf:about="http://creativecommons.org/licenses/publicdomain/">
        <cc:permits
           rdf:resource="http://creativecommons.org/ns#Reproduction" />
        <cc:permits
           rdf:resource="http://creativecommons.org/ns#Distribution" />
        <cc:permits
           rdf:resource="http://creativecommons.org/ns#DerivativeWorks" />
      </cc:License>
    </rdf:RDF>
  </metadata>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
